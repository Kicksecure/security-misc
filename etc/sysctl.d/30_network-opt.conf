## Copyright (C) 2019 - 2022 ENCRYPTED SUPPORT LP <adrelanos@whonix.org>
## See the file COPYING for copying conditions.

## Improvements in networking performance largely based on Arch's recommendations
## https://wiki.archlinux.org/title/sysctl#Improving_performance

## Increasing the size of the receive queue
net.core.netdev_max_backlog=16384

## Increase the maximum number of connections
net.core.somaxconn=8192

## Increase memory dedicated to the network interfaces
## Set max cache size (in bytes) to 16MB
## These settings are for extremely fast connections and likely allocate excessive memory for typical networks
## https://blog.cloudflare.com/the-story-of-one-latency-spike/
## https://github.com/redhat-performance/tuned/blob/master/profiles/network-throughput/tuned.conf#L10
## https://nateware.com/2013/04/06/linux-network-tuning-for-2013/
net.core.rmem_default=1048576
net.core.rmem_max=16777216
net.core.wmem_default=1048576
net.core.wmem_max=16777216
net.core.optmem_max=65536
net.ipv4.tcp_rmem=4096 1048576 2097152
net.ipv4.tcp_wmem=4096 65536 16777216

## Increase the default UDP limits
net.ipv4.udp_rmem_min=8192
net.ipv4.udp_wmem_min=8192

## Enable TCP Fast Open for both incoming and outgoing connections
## https://www.keycdn.com/support/tcp-fast-open
net.ipv4.tcp_fastopen=3

## Raise maximum queue length of pending connections
net.ipv4.tcp_max_syn_backlog=8192

## Raise maximum number of sockets in TIME_WAIT state
net.ipv4.tcp_max_tw_buckets=2000000

## Let TCP reuse an existing connection in the TIME-WAIT state
net.ipv4.tcp_tw_reuse=1

## Seconds to wait for a final FIN packet before the socket is forcibly closed
net.ipv4.tcp_fin_timeout=10
